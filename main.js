!function(){"use strict";var e=class{constructor(e,t){var s,r,i;s=this,i=()=>this._hasInvalidInput(this._inputElements)?this.disableButton():this.enableButton(),(r=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(r="_toggleButtonState"))in s?Object.defineProperty(s,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):s[r]=i,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this.disableButton(),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}};var t=class{constructor(e){let{data:t,selector:s,handlePreview:r,handleLike:i,handleDelete:n}=e;var o,a,l;o=this,l=()=>{this._element.remove(),this._element=null},(a=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(a="handleDeleteButton"))in o?Object.defineProperty(o,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):o[a]=l,this._name=t.name,this._link=t.link,this._cardSelector=s,this._handlePreview=r,this._likes=t.likes,this._cardId=t._id,this._userId=t.userId,this._ownerId=t.owner._id,this._handleLike=i,this._handleDelete=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".cards__content").cloneNode(!0)}getCardView(){return this._element=this._getTemplate(),this._cardElementImage=this._element.querySelector(".cards__image"),this._cardElementTitle=this._element.querySelector(".cards__title"),this._cardElementImage.src=this._link,this._cardElementImage.alt=this._name,this._cardElementTitle.textContent=this._name,this._deleteButton=this._element.querySelector(".cards__delete"),this._likeButton=this._element.querySelector(".cards__like-button"),this._likeCounter=this._element.querySelector(".cards__like-counter"),this.showLikes(this._likes),this._removeDeleteButton(),this._setEventListenersCard(),this._element}_setEventListenersCard(){this._deleteButton.addEventListener("click",(()=>this._handleDelete(this))),this._likeButton.addEventListener("click",(()=>this._handleLike(this))),this._cardElementImage.addEventListener("click",(()=>this._handlePreview({name:this._name,link:this._link})))}isLiked(){return this._likes.some((e=>e._id===this._userId))}showLikes(e){this._likes=e||[],this._likeCounter.textContent=this._likes.length,this._handleLikeButton()}_handleLikeButton(){this.isLiked()?this._likeButton.classList.add("cards__like-active"):this._likeButton.classList.remove("cards__like-active")}_removeDeleteButton(){this._userId!==this._ownerId&&this._deleteButton.remove()}};class s{constructor(e,t){let{items:s,renderer:r}=e;this._initialArray=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._initialArray.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class r{constructor(e){let{popupSelector:t}=e;this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){e.preventDefault(),"Escape"===e.key&&this.close()}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal__close-button")||e.target.classList.contains("modal_opened"))&&this.close()}))}}class i extends r{constructor(e){let{popupSelector:t,handleFormSubmit:s,resetOnClose:r}=e;var i,n,o;super({popupSelector:t}),i=this,o=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())},(n=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(n="_handleSubmit"))in i?Object.defineProperty(i,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):i[n]=o,this._handleFormSubmit=s,this._resetOnClose=r,this._form=this._popup.querySelector(".modal__form"),this._inputList=this._popup.querySelectorAll(".modal__input"),this._formButton=this._popup.querySelector(".modal__button"),this._formButtonText=this._formButton.textContent}_getInputValues(){const e={};return this._inputList.forEach((t=>e[t.name]=t.value)),e}setEventListeners(){this._form.addEventListener("submit",this._handleSubmit),super.setEventListeners()}close(){this._resetOnClose&&this._form.reset(),super.close()}setSubmitText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._formButton.textContent=e?t:this._formButtonText}}const n={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_error",errorClass:"modal__error_visible"},o="#edit-modal",a="#add-modal",l="#avatar-modal",u=".cards__list",h=document.querySelector(o),d=document.querySelector(a),c=document.querySelector(l),_=document.querySelector("#edit-profile"),m=document.querySelector("#btn-add-card"),p=document.querySelector("#btn-avatar");document.querySelector(u),document.querySelector("#image-logo").src="4e8e0a1d604782a0dff8.svg";const v=new class{constructor(e,t){this._baseUrl=e,this._headers=t}_handleServerResponse(e){if(e.ok)return e.json();Promise.reject(e.status)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleServerResponse)}getUserInfo(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then(this._handleServerResponse)}editUserInfo(e){return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._handleServerResponse)}editAvatar(e){return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._handleServerResponse)}postCard(e){return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._handleServerResponse)}deleteCard(e){return fetch(this._baseUrl+"/cards/"+e,{method:"DELETE",headers:this._headers}).then(this._handleServerResponse)}showLikes(e){return fetch(`${this._baseUrl}/cards/likes${e}`,{headers:this.headers}).then(this._handleServerResponse)}addLikes(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then(this._handleServerResponse)}removeLikes(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then(this._handleServerResponse)}}("https://around.nomoreparties.co/v1/group-12",{authorization:"77fde786-44a3-44dd-ae6e-76f3a1c5cf68","Content-Type":"application/json"});let b=null,S=null;const f=new class{constructor(e){let{userNameSelector:t,userJobSelector:s,userAvatarSelector:r}=e;this._userName=document.querySelector(t),this._userJob=document.querySelector(s),this._userAvatar=document.querySelector(r)}getUserInfo(){return{userName:this._userName.textContent,userJob:this._userJob.textContent,userAvatar:this._userAvatar.src}}setUserInfo(e){let{name:t,about:s,avatar:r}=e;this._userName.textContent=t,this._userJob.textContent=s,r&&(this._userAvatar.src=r)}}({userNameSelector:"#prof-title",userJobSelector:"#prof-subtitle",userAvatarSelector:"#avatar-image"});function y(e,s){const r=new t({data:{...e,userId:s},selector:"#card-template",handlePreview:()=>{w.open(e)},handleLike:e=>{r.isLiked()?v.removeLikes(e._cardId).then((e=>{r.showLikes(e.likes)})).catch((e=>{console.log(`An error has occured ${e}`)})):v.addLikes(e._cardId).then((e=>{r.showLikes(e.likes)})).catch((e=>{console.log(`An error has occured ${e}`)}))},handleDelete:e=>{B.confirmDelete((()=>{B.setSubmitText(!0,"Deleting..."),v.deleteCard(e._cardId).then((()=>{e.handleDeleteButton(),B.close()})).catch((e=>{console.log(`An error has occured ${e}`)})).finally((()=>B.setSubmitText(!1)))})),B.open()}});return r.getCardView()}Promise.all([v.getUserInfo(),v.getInitialCards()]).then((e=>{let[t,r]=e;S=t._id,f.setUserInfo({name:t.name,about:t.about,avatar:t.avatar}),b=new s({items:r,renderer:e=>{b.addItem(y(e,S))}},u),b.renderItems()})).catch((e=>{console.log(`Error: ${e}`)}));const E=new e(n,h);E.enableValidation();const g=new e(n,d);g.enableValidation();const L=new e(n,c);L.enableValidation();const k=new i({popupSelector:o,handleFormSubmit:e=>{k.setSubmitText(!0),v.editUserInfo(e).then((e=>{f.setUserInfo(e),k.close()})).catch((e=>{console.log(`An error has occured ${e}`)})).finally((()=>k.setSubmitText(!1)))},resetOnClose:!0});k.setEventListeners();const C=new i({popupSelector:a,handleFormSubmit:e=>{C.setSubmitText(!0,"Creating..."),v.postCard(e).then((e=>{b.addItem(y(e,S)),C.close()})).catch((e=>{console.log(`An error has occured ${e}`)})).finally((()=>C.setSubmitText(!1)))},resetOnClose:!0});C.setEventListeners();const I=new i({popupSelector:l,handleFormSubmit:e=>{I.setSubmitText(!0),v.editAvatar(e).then((e=>{f.setUserInfo(e),I.close()})).catch((e=>console.log(`An error has occured ${e}`))).finally((()=>I.setSubmitText(!1)))},resetOnClose:!0});I.setEventListeners();const w=new class extends r{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._previewImage=this._popup.querySelector(".modal__preview-image"),this._previewTitle=this._popup.querySelector(".modal__preview-text")}open(e){let{name:t,link:s}=e;this._previewImage.src=s,this._previewImage.alt=`Photo of ${t}`,this._previewTitle.textContent=t,super.open()}}({popupSelector:"#preview-modal"});w.setEventListeners();const B=new class extends r{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._modalForm=this._popup.querySelector(".modal__form"),this._submitButton=this._popup.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}setSubmitText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}confirmDelete(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}({popupSelector:"#confirm-modal"});B.setEventListeners(),p.addEventListener("click",(()=>{L.resetValidation(),I.open()})),m.addEventListener("click",(()=>{g.resetValidation(),C.open()})),_.addEventListener("click",(()=>{const{userName:e,userJob:t}=f.getUserInfo();document.querySelector("#name-input").value=e,document.querySelector("#job-input").value=t,E.resetValidation(),k.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,